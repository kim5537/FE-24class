/*reset*/
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

ul,li {
  list-style: none;
}

a {
  text-decoration: none;
  color: inherit;
}



/*common*/
main {
  width: 100%;
  height: 100vh;
  background: linear-gradient(180deg, rgb(60, 96, 138), rgb(85, 169, 247),rgb(246, 248, 215));
  position: relative;
  overflow: hidden;
  h1 {
    position: absolute;
    top: 7vh;
    left: 4vw;
    font-size: 0;
    strong {
      font-size: 36px;
      line-height: 140%;
      letter-spacing: 1;
      color: #fff;
    }
    span {
      font-size: 12px;
      line-height: 100%;
      color: #fff;
      letter-spacing: 1px;
      opacity: 0.8;
    }
  }
  .menu {
    position: absolute;
    top: 8vh;
    right: 4vw;
    i {
      color: #fff;
      font-size: 24px;
    }
  }
  &>p {
    position: absolute;
    bottom: 7vh;
    left: 50%;
    transform: translateX(-50%);
    font-size: 12px;
    line-height: 1;
    color: #55bfe9;
    letter-spacing: 2px;
    opacity: 0.8;
  }
  section {
    width: 20vw;
    height: 65vh;
    position: absolute;
    left: 50%;
    // top: 50%;
    // margin-top: -32vh;
    margin-left: -10vw;
    border: 1px solid #f00;
    //중심값이 움직이면 아티클이 다 움직이기 때문에 js에서 알티클들을 둥굴게 펼치고 섹션의 위치를 바꾼다.
    margin-top: -25vh;
    top: 140%;
    article {
      width: 100%;
      height: 100%;
      position: absolute;
      top: 0;
      left: 0;
      
      .inner {
        width: 100%;
        height: 100%;
        background: #f0f7ff;
        padding: 5vh 2.5vw 8vh;
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        align-content: space-between;
        border-radius: 10px;
        box-shadow: 6px 6px 20px rgba($color: #6882a3, $alpha: 0.2);
        opacity: 0.6;
        transform: scale(0.8);
        transition: opacity 1s, transform 1s, box-shadow 1s;
        .pic {
          width: 15vw;
          height: 15vw;
          //vw를 높이에도 적용할수있는게 %와의 차이점이고 제일 큰 장점이다.
          border-radius: 50%;
          margin: 0 auto;
          //같은 명령어를 쓰면 안된다. js에서 backimg를 사용할 것이기때문에 css는 다르게 적용 ==>그냥 백그라운드를 쓰면 js의 값이 css값을 덥는다.
          background-repeat: no-repeat;
          background-size: cover;
          background-position: center;
          display: flex;
          justify-content: center;
          align-items: center;
          //전후문자를 위해 
          //이미지는 js로 
          //전후문자로 이미지, 그림자
          position: relative;
          // border: 1px solid aqua;
          &::before,
          &::after {
            content: "";
            width: inherit;
            height: inherit;
            border-radius: inherit;
            position: absolute;
            top: 0;
            left:  0 ;
            background-image: inherit;
            background-position: inherit;
            background-size: inherit;
            background-repeat: inherit;
            transform-origin: center center;
          };
          &::before {
            transform: translateY(10%);
            filter: blur(26px) brightness(1.6);
          }
          .dot {
            width: 3vw;
            height: 3vw;
            background: #e4f1ff;
            border-radius: 50%;
            z-index: 3;
            box-shadow: inset 5px 5px 10px rgba(76, 61, 145, 0.3);
          }
        };
      };
      &.on .inner {
        opacity: 1;
        transform: scale(1.1);
        box-shadow: 0 0 30px rgba($color: #faffba, $alpha: 0.5);
      }
    }
  }
}